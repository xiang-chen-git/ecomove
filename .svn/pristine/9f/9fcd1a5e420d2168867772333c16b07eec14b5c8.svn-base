{
    "contents" : "estimateCVM.vaf <- function(Z, T, CI = FALSE, diagnose = FALSE, spline=FALSE)\n{\n  T <- T-min(T)\n  dT <- mean(diff(T))\n  if(sd(diff(T))>1e-10) stop(\"Sorry - time intervals must be constant to use this method.\")\n  \n  lag <- T[1:min(300,length(T)/2)]\n  V <- diff(Z)/diff(T)\n  \n  if(spline)\n  {\n    VZT <- getV.spline(Z,T)\n    V <- VZT$V\n    T <- VZT$T\n    Z <- VZT$Z\n  }\n  \n  lag.scalar <- lag[-1]/dT  \n  vaf <- apply(as.matrix(lag.scalar),1,getVaf, V=V)\n  vaf <- c(1,as.vector(vaf[-length(vaf)]))\n  lag <- lag[-length(lag)]\n  \n  truncate <- 30\n  if(min(vaf) < exp(-3))\n  {\n    truncate <- min(which(vaf<exp(-3)))\n    vaf <- vaf[1:truncate]\n    lag <- lag[1:truncate]\n  }\n  \n  if(truncate < 3 | truncate == \"Inf\"){ \n    warning(\"Data are too sparcely sampled for any estimate of tau.\")\n    beta.hat <- NA; beta.CI <- NA \n  } else if(truncate < 10){ \n    warning(\"Data are too sparcely sampled for robust estimate of tau.\")\n    beta.hat <- lm(log(vaf)~lag-1)$coef; beta.CI <- NA\n  } else {\n    tau.gls <- try(gls(log(vaf[vaf > 0])~lag[vaf > 0]-1, correlation = corAR1(form=~1), weights=varExp()), silent=TRUE)\n    if(is(tau.gls)!=\"try-error\")\n    {\n      beta.hat <- tau.gls$coef\n      beta.CI <- intervals(tau.gls)[[1]][c(1,3)]\n    } else {\n      tau.lm <- lm(log(vaf[vaf>0])~lag[vaf>0]-1)\n      beta.hat <- tau.lm$coef\n      beta.CI <- beta.hat + c(-1,1) *qt(0.975, df=length(vaf[vaf > 0])-1)*summary(tau.lm)$coef[1,2]\n      warning(\"Generalized least squares fit failed - confidence intervals are probably suspect.\")\n    }}\n    \n    tau.hat <- as.numeric(-1/beta.hat)\n    nu.hat <- mean(Mod(V))\n    results <- data.frame(tau.hat = tau.hat, nu.hat = nu.hat)\n    \n    if(CI)\n    {\n      # nu estimates\n      rho.hat <- cor(Mod(V[-1]), Mod(V[-length(V)]))\n      nu.se <- sd(Mod(V))/sqrt(length(V))/(1-rho.hat)/2\n      nu.CI <- nu.hat +  c(-1,1) * qnorm(0.975) * nu.se\n      \n      # tau estimates\n      tau.CI <- -1/beta.CI\n      \n      # compile results\n      results <- data.frame(t(results), rbind(tau.CI, nu.CI))\n      row.names(results) <- c(\"tau\", \"nu\")\n      names(results) <- c(\"Estimate\", \"C.I.low\", \"C.I.high\")\n    }\n    \n    if(diagnose)\n    {   \n      plot(lag, log(vaf), ylab=\"log(vaf)\", main=\"log(vaf) should look linear over this range\", bty=\"l\", cex.lab=1.25, \n           cex.sub=1.25, font.sub = 2)\n      abline(0, beta.hat, col=2)\n    }\n    return(results)\n  }\n  ",
    "created" : 1398702594155.000,
    "dirty" : false,
    "encoding" : "WINDOWS-1252",
    "folds" : "",
    "hash" : "312545605",
    "id" : "6249265A",
    "lastKnownWriteTime" : 1398944024,
    "path" : "~/programming/ecomove/cvm/cvm/R/estimateCVM.vaf.r",
    "project_path" : "R/estimateCVM.vaf.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}