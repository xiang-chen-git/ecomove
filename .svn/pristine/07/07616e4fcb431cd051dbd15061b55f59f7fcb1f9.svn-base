\name{estimateCVM}
\alias{estimateCVM}
\title{Estimating parameters of CVM}
\usage{
estimateCVM <- function(Z, T, parameters = c("nu", "tau", "v0")[1:2], CI = FALSE, method = c("vaf", "crw", "onestep", "fullL", "crawl")[1], diagnose = FALSE, ...)
}
\arguments{
  \item{Z}{location data in complex form (X + iY)}

  \item{T}{time of observations (NOTE: must be regularly
  spaced for methods "vaf" and "crw")}

  \item{method}{the method to use for the estimation.  See
  Gurarie et al. (in prep) for details of "vaf", "crw",
  "onestep", and "fullL" methods. The `crawl' is based on
  Johnson et al (2008) and is a wrapper for the
  \code{\link{crwMLE}}.}

  \item{parameters}{which parameters to estimate.  for
  methods "vaf" and "crw" always "tau" and "nu" for, for
  one-step likelihood, always "tau" and possibly "nu", and
  always both for full-likelihood (with an optional "v0")
  and for the crawl method.}

  \item{CI}{whether or not to compute 95% confidence
  intervals for parameters. In some cases, this can make
  the computation much slower.}

  \item{spline}{whether or not to use the spline adjustment
  (only relevant for "vaf" and single-step likelihood
  methods).}

  \item{diagnose}{whether to draw a diagnostic plot.
  Varies for different methods}

  \item{...}{additional parameters to pass to estimation
  functions.  These are particularly involved in the
  "crawl" method (see \code{\link{crwMLE}}).}
}
\value{
A data frame with point estimates of mean speed `nu' and
time-scale `tau
}
\description{
This is the grand function that estimates the nu, tau and
(occasionally) v_0
}
\examples{
require(cvm)

#----------------------------------------------------------
# Example 1: VAF method (high resolution, regular sampling)
#----------------------------------------------------------

  nu <- 10
  tau <- 2
  v0 <- 10
	T <- seq(0,100,.1)
  mycvm <- CVM2(T, nu, tau, v0)	
  plot(mycvm$Z, asp=1, cex=0.5, pch=19, col=rgb(0,0,0,.1))
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="vaf",diagnose=TRUE)
	
  # coarser sampling 
	tau <- 2
	T <- seq(0,1000,1)
  mycvm <- CVM2(T, nu, tau, v0)  
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19)
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="vaf",diagnose=TRUE)
	
	# improved speed estimate because of spline
	estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="vaf",spline=TRUE)
	
#----------------------------------------------------------
# Example 2: CRW method (low resolution, regular sampling)
#----------------------------------------------------------

	tau <- 1
  nu <- 8
  mycvm <- CVM2(T=1:1000, nu, tau)
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19)
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="crw", diagnose=TRUE)
	
# Example 2b: CRW method, poor diagnostics (auto-correlated step-lengths)
  tau <- 100
  mycvm <- CVM2(T=1:1000, nu, tau)
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19)
  estimateCVM(mycvm$Z,mycvm$T,method="crw", CI=TRUE, diagnose=TRUE)

#--------------------------------------------------------------------------------
# Example 3: One-step likelihood method (higher resolution, irregular sampling)
#--------------------------------------------------------------------------------

  nu <- 10
  tau <- 3
  v0 <- 10

# irregular timing
  
  T <- cumsum(rexp(1000,1/.1))
  mycvm <- CVM2(T, nu, tau, v0)	
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19)
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="onestep", parameters=c("tau", "nu"))

# low resolution example
  
  T <- cumsum(rexp(1000,1))
  mycvm <- CVM2(T, nu, tau, v0)	
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19)
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="onestep", parameters=c("tau", "nu"))

# improved with splining
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="onestep", parameters=c("tau", "nu"), spline=TRUE)

#--------------------------------------
# Example 4: Full-likelihood method 
#--------------------------------------

  nu <- 10; tau <- 3; v0 <- 10
  T <- cumsum(rexp(100,1))
  mycvm <- CVM2(T, nu, tau, v0) 
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19)
  estimateCVM(mycvm$Z,mycvm$T,CI=TRUE,method="fullL")

#-------------------------------------------------------
# Example 5: `crawl' method (from Johnson et al. 2008) 
#-------------------------------------------------------

  # 5a. same track as above
  estimateCVM(mycvm$Z,mycvm$T,method="crawl")

  # 5b. much longer track
  T <- cumsum(rexp(1000,1))
  mycvm <- CVM2(T, nu, tau, v0) 
  plot(mycvm$Z, asp=1, type="o", cex=0.5, pch=19, col=rgb(0,0,0,.2))
  estimateCVM(mycvm$Z,mycvm$T,method="crawl")
}

