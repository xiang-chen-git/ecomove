t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(2)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(2)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(3H)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
set.seed(3H)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(3)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(3)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(4)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(5)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(6)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(7)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(8)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(9)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(10)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
mu1 <- 0; mu2 <- 0
sigma1 <- 1; sigma2 <- 1
rho1 <- 0.9; rho2 <- 0.2
set.seed(11)
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
# create time series with break at 500
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1), SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
BB <- GetBestBreak(x,t, tau=FALSE)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2)
abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
set.seed(2)
par(bty="l")
mu1 <- 5; mu2 <- 3
sigma1 <- 2; sigma2 <- 1
rho1 <- 0.5; rho2 <- 0.5
SimTS <- function(n, mu, rho, sigma)
{
X.standard <- arima.sim(n, model=list(ar = rho))
X.standard/sd(X.standard)*sigma + mu
}
t.full <- 1:1000
t.break <- 500
x.full <- c(SimTS(t.break, mu1, rho1, sigma1),
SimTS(max(t.full)-t.break+1, mu2, rho2, sigma2))
# subsample 100 observations and estimate
keep <- sort(sample(1:length(x.full), 100))
x <- x.full[keep]
t <- t.full[keep]
(BB <- GetBestBreak(x,t, tau=FALSE))
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2); abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
par(bty="l")
plot(t,x, type="l")
abline(v = 500, col=2, lwd=2, lty=2); abline(v = BB[2], col=2, lwd=2, lty=3)
legend("topright", legend=c("true break", "estimated break"), col=2, lwd=2, lty=2:3)
library(bcpa)
library(bcpa)
library(bcpa)
library(bcpa)
lilac.phenology <- read.table("http://faculty.washington.edu/eliezg/teaching/DataScience/Lecture9/LilacAnalysis/LilacPhenology.txt", header=TRUE)
lilac.phenology <- subset(lilac.phenology, YEAR < 2000)
lilac.locations <- read.csv("http://faculty.washington.edu/eliezg/teaching/DataScience/Lecture9/LilacAnalysis/LilacLocations.csv")
lp <- lilac.phenology
lp[lp == 999] <- NA
ll <- lilac.locations
ll$Nobs <- table(lp$STATION)[match(ll$ID, as.numeric(names(table(lp$STATION))))]
require(bcpa)
data(Simp)
plot(Simp)
Simp.VT <- GetVT(Simp)
head(Simp.VT)
hist(Simp.VT$V)
hist(Simp.VT$V, col="grey", breaks=20)
rose.diag(Simp.VT$Phi)
require(circular)
rose.diag(Simp.VT$Phi)
?rose.diag
rose.diag(Simp.VT$Phi, bins=24)
rose.diag(Simp.VT$Theta, bins=24)
library(bcpa)
?GetVT
data(Simp)
plot(Simp)
Simp.VT <- GetVT(Simp)
head(Simp.VT)
# Distribution of estimated speeds
hist(Simp.VT$V, col="grey", breaks=20)
# Distribution of turning angles
require(circular)
rose.diag(Simp.VT$Theta, bins=24)
hist(Simp.VT$V, col="grey", breaks=20)
?PhasePlot
library(bcpa)
?PhasePlot
?bcpa
setwd("c:/eli/sandbox")
## ======================================================================
setwd("c:/eli/sandbox")
# Here's an easy way to get all the URLs in R
start <- as.Date('2013-10-01')
today <- as.Date('2014-10-10')
all_days <- seq(start, today, by = 'day')
year <- as.POSIXlt(all_days)$year + 1900
urls <- paste0('http://cran-logs.rstudio.com/', year, '/', all_days, '.csv.gz')
# only download the files you don't have:
missing_days <- setdiff(as.character(all_days), tools::file_path_sans_ext(dir("CRANlogs"), TRUE))
dir.create("CRANlogs")
for (i in 1:length(missing_days)) {
print(paste0(i, "/", length(missing_days)))
download.file(urls[i], paste0('CRANlogs/', missing_days[i], '.csv.gz'))
}
i
dir.create("CRANlogs")
for (i in 1:length(missing_days)) {
print(paste0(i, "/", length(missing_days)))
try(download.file(urls[i], paste0('CRANlogs/', missing_days[i], '.csv.gz')))
}
for (i in 228:length(missing_days)) {
print(paste0(i, "/", length(missing_days)))
try(download.file(urls[i], paste0('CRANlogs/', missing_days[i], '.csv.gz')))
}
?GetL
GetL
library(bcpa)
library(bcpa)
reload()
vignette(bcpa)
library(bcpa)
par(bty="l")
rho <- 0.8
x.full <- arima.sim(1000, model=list(ar = rho))
t.full <- 1:1000
keep <- sort(sample(1:1000, 200))
x <- x.full[keep]
t <- t.full[keep]
plot(t,x, type="l")
par(bty="l")
rhos <- seq(0,.99,.01)
L <- rep(NA, length(rhos))
for(i in 1:length(rhos))
L[i] <- GetL(x,t,rhos[i])
# plot likelihood profile
plot(rhos, L, type="l")
abline(v = rho, lty=2, lwd=2); abline(v = rhos[L == max(L)], lty=3, lwd=2)
legend("bottomleft", legend=c("true value","MLE"), lty=2:3, lwd=2)
GetRho(x, t, tau=FALSE)
GetRho(x, t, tau=TRUE)
GetRho
par(bty="l", cex.lab=1.25)
data(Simp)
head(Simp)
plot(Simp)
?GetBestBreak
ar.sim
arima.sim
?arima.sim
MakeTrack <- function(X, Y, Time)
{
MyTrack <- data.frame(X = X, Y = Y, Time = Time)
class(MyTrack) <- "track"
return(MyTrack)
}
X <- cumsum(arima.sim(100, ar = 0.8, ))
Y <- cumsum(arima.sim(100, ar = 0.8, ))
X <- cumsum(arima.sim(100, list(ar=0.8))
)
X <- cumsum(arima.sim(m=100, model=list(ar=0.8)))
X <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Y <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Time <- 1:100
MakeTrack(X,Y,Time)
?class
plot(MakeTrack(X,Y,Time))
X <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Y <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Time <- 1:100
mytrack <- MakeTrack(X,Y,Time)
plot(mytrack)
head(mytrack)
?class
MakeTrack <- function(X, Y, Time)
{
MyTrack <- data.frame(X = X, Y = Y, Time = Time)
class(MyTrack) <- c("data.frame", "track")
return(MyTrack)
}
X <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Y <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Time <- 1:100
mytrack <- MakeTrack(X,Y,Time)
plot(mytrack)
MakeTrack <- function(X, Y, Time)
{
MyTrack <- data.frame(X = X, Y = Y, Time = Time)
class(MyTrack) <- c("track", "data.frame")
return(MyTrack)
}
X <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Y <- cumsum(arima.sim(n=100, model=list(ar=0.8)))
Time <- 1:100
mytrack <- MakeTrack(X,Y,Time)
plot(mytrack)
head(mytrack)
library(bcpa)
?WindowSweep
library(bcpa)
rm(MakeTrack)
library(bcpa)
?MakeTrack
library(bcpa)
?MakeTrack
?WindowSweep
?MakeTrack
unloadNamespace(bcpa)
unloadNamespace("bcpa")
library(bcpa)
?MakeTrack
?MakeTrack
library(bcpa)
library(bcpa)
?plot.track
library(bcpa)
system('kpsewhich framed.sty')
library(bcpa)
library(bcpa)
?MakeTrack
library(bcpa)
